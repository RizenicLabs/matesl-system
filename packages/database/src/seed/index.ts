import {
  PrismaClient,
  ProcedureCategory,
  ProcedureStatus,
  UserRole,
} from '../generated/client';
import bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function main() {
  console.log('ЁЯМ▒ Starting database seed...');

  try {
    // Create admin user
    const adminPassword = await bcrypt.hash('admin123', 10);
    const admin = await prisma.user.upsert({
      where: { email: 'admin@gov.lk' },
      update: {},
      create: {
        email: 'admin@gov.lk',
        name: 'System Administrator',
        password: adminPassword,
        role: UserRole.SUPER_ADMIN,
        emailVerified: true,
      },
    });

    console.log('ЁЯСд Admin user created:', admin.email);

    // Create government offices
    const offices = await Promise.all([
      prisma.office.create({
        data: {
          name: "Registrar General's Department",
          nameSi: 'р╢╜р╖Ър╢Ыр╢Ър╖Пр╢░р╖Тр╢Ър╖Пр╢╗р╖У р╢вр╢▒р╢╗р╖Пр╢╜р╖К р╢пр╖Щр╢┤р╖Пр╢╗р╖Кр╢нр╢╕р╖Ър╢▒р╖Кр╢нр╖Фр╖А',
          nameTa: 'рокродро┐ро╡ро╛ро│ро░рпН роЬрпЖройро░ро▓рпН родро┐рогрпИроХрпНроХро│роорпН',
          address: 'No. 7, Independence Avenue, Colombo 07',
          district: 'Colombo',
          province: 'Western',
          contactNumbers: ['+94112691185', '+94112688211'],
          email: 'info@rgd.gov.lk',
          website: 'http://www.rgd.gov.lk',
          workingHours: 'Monday to Friday: 8:30 AM - 4:15 PM',
          latitude: 6.9147,
          longitude: 79.8774,
        },
      }),
      prisma.office.create({
        data: {
          name: 'Department of Immigration and Emigration',
          nameSi: 'р╢Жр╢Ьр╢╕р╢▒ р╖Др╖П р╖Ар╖Тр╢Ьр╢╕р╢▒ р╢пр╖Щр╢┤р╖Пр╢╗р╖Кр╢нр╢╕р╖Ър╢▒р╖Кр╢нр╖Фр╖А',
          nameTa: 'роХрпБроЯро┐ропрпЗро▒рпНро▒ рооро▒рпНро▒рпБроорпН роХрпБроЯро┐ропроХро▒рпНро▒ро▓рпН родро┐рогрпИроХрпНроХро│роорпН',
          address: 'No. 41, Ananda Rajakaruna Mawatha, Colombo 10',
          district: 'Colombo',
          province: 'Western',
          contactNumbers: ['+94112329300', '+94112329400'],
          email: 'info@immigration.gov.lk',
          website: 'http://www.immigration.gov.lk',
          workingHours: 'Monday to Friday: 8:30 AM - 4:15 PM',
          latitude: 6.9355,
          longitude: 79.851,
        },
      }),
      prisma.office.create({
        data: {
          name: 'Ministry of Public Services, Provincial Councils and Local Government',
          nameSi: 'р╢╗р╖Пр╢вр╖КтАНр╢║ р╖Гр╖Ър╖Ар╖П, р╢┤р╖Ер╖Пр╢нр╖К р╖Гр╢╖р╖П р╖Гр╖Д р╢┤р╖Ер╖Пр╢нр╖К р╢┤р╖Пр╢╜р╢▒ р╢Ер╢╕р╖Пр╢нр╖КтАНр╢║р╢Вр╖Бр╢║',
          nameTa: 'рокрпКродрпБ роЪрпЗро╡рпИроХро│рпН, рооро╛роХро╛рог роЪрокрпИроХро│рпН рооро▒рпНро▒рпБроорпН роЙро│рпНро│рпВро░рпН роЕро░роЪро╛роЩрпНроХ роЕроорпИроЪрпНроЪрпБ',
          address: 'Independence Square, Colombo 07',
          district: 'Colombo',
          province: 'Western',
          contactNumbers: ['+94112694031', '+94112694032'],
          email: 'info@pubad.gov.lk',
          website: 'http://www.pubad.gov.lk',
          workingHours: 'Monday to Friday: 8:30 AM - 4:15 PM',
          latitude: 6.9147,
          longitude: 79.8774,
        },
      }),
    ]);

    console.log('ЁЯПв Government offices created');

    // Create sample procedures with comprehensive data
    const procedures = [
      {
        title: 'Apply for New National Identity Card',
        titleSi: 'р╢▒р╖А р╢вр╖Пр╢нр╖Тр╢Ъ р╖Др╖Рр╢│р╖Фр╢▒р╖Фр╢╕р╖Кр╢┤р╢н р╖Гр╢│р╖Др╖П р╢Ер╢║р╢пр╖Фр╢╕р╖К р╢Ър╖Тр╢╗р╖Ур╢╕',
        titleTa: 'рокрпБродро┐роп родрпЗроЪро┐роп роЕроЯрпИропро╛ро│ роЕроЯрпНроЯрпИроХрпНроХрпБ ро╡ро┐рогрпНрогрокрпНрокро┐роХрпНроХро╡рпБроорпН',
        slug: 'apply-new-national-identity-card',
        category: ProcedureCategory.IDENTITY_DOCUMENTS,
        status: ProcedureStatus.ACTIVE,
        keywords: [
          'NIC',
          'national identity card',
          'ID card',
          'identity',
          'birth certificate',
        ],
        searchTags: ['nic', 'identity', 'card', 'national', 'id'],
        estimatedDuration: '7-14 days',
        difficulty: 'EASY',
        steps: [
          {
            order: 1,
            instruction:
              'Visit the nearest Divisional Secretariat office with required documents',
            instructionSi:
              'р╢Ер╖Ар╖Бр╖КтАНр╢║ р╢╜р╖Тр╢║р╢Ър╖Тр╢║р╖Ар╖Тр╢╜р╖Т р╖Гр╢╕р╢Ь р╢Жр╖Гр╢▒р╖Кр╢▒р╢нр╢╕ р╢┤р╖КтАНр╢╗р╖Пр╢пр╖Ър╖Бр╖Ур╢║ р╢╜р╖Ър╢Ър╢╕р╖К р╢Ър╖Пр╢╗р╖Кр╢║р╖Пр╢╜р╢║р╢з р╢┤р╖Тр╖Ар╖Тр╖Гр╖Щр╢▒р╖Кр╢▒',
            instructionTa:
              'родрпЗро╡рпИропро╛рой роЖро╡рогроЩрпНроХро│рпБроЯройрпН роЕро░рпБроХро┐ро▓рпБро│рпНро│ рокро┐ро░родрпЗроЪ роЪрпЖропро▓ро░рпН роЕро▓рпБро╡ро▓роХродрпНродро┐ро▒рпНроХрпБ роЪрпЖро▓рпНро▓ро╡рпБроорпН',
            estimatedTime: '30-45 minutes',
            requiredDocs: [
              'Birth Certificate',
              'Proof of Address',
              'Parent NIC copies',
            ],
            tips: [
              'Visit early morning to avoid queues',
              'Bring photocopies of all documents',
              'Carry exact change for fees',
            ],
          },
          {
            order: 2,
            instruction:
              'Fill the application form (Form 1) completely and accurately',
            instructionSi:
              'р╢Ер╢║р╢пр╖Фр╢╕р╖Кр╢┤р╢н (р╢Жр╢Ър╖Шр╢нр╖Т р╢┤р╢нр╖КтАНр╢╗ 1) р╖Гр╢╕р╖Кр╢┤р╖Цр╢╗р╖Кр╢лр╢║р╖Щр╢▒р╖К р╖Гр╖Д р╢▒р╖Тр╖Ар╖Рр╢╗р╢пр╖Тр╖А р╢┤р╖Фр╢╗р╖Ар╢▒р╖Кр╢▒',
            instructionTa:
              'ро╡ро┐рогрпНрогрокрпНрок рокроЯро┐ро╡родрпНродрпИ (рокроЯро┐ро╡роорпН 1) роорпБро┤рпБроорпИропро╛роХ рооро▒рпНро▒рпБроорпН родрпБро▓рпНро▓ро┐ропрооро╛роХ роиро┐ро░рокрпНрокро╡рпБроорпН',
            estimatedTime: '15-20 minutes',
            tips: [
              'Use black ink pen only',
              'Write clearly and legibly',
              'Double-check all information',
            ],
          },
          {
            order: 3,
            instruction:
              'Submit application with documents and pay the required fee',
            instructionSi:
              'р╢╜р╖Тр╢║р╢Ър╖Тр╢║р╖Ар╖Тр╢╜р╖Т р╖Гр╢╕р╢Ь р╢Ер╢║р╢пр╖Фр╢╕р╖Кр╢┤р╢н р╢Йр╢пр╖Тр╢╗р╖Тр╢┤р╢нр╖К р╢Ър╢╗ р╢Ер╖Ар╖Бр╖КтАНр╢║ р╢Ьр╖Пр╖Гр╖Кр╢нр╖Фр╖А р╢Ьр╖Щр╖Ар╢▒р╖Кр╢▒',
            instructionTa:
              'роЖро╡рогроЩрпНроХро│рпБроЯройрпН ро╡ро┐рогрпНрогрокрпНрокродрпНродрпИ роЪрооро░рпНрокрпНрокро┐родрпНродрпБ родрпЗро╡рпИропро╛рой роХроЯрпНроЯрогроорпН роЪрпЖро▓рпБродрпНродро╡рпБроорпН',
            estimatedTime: '15 minutes',
            tips: [
              'Get receipt for payment',
              'Note down reference number',
              'Ask for expected completion date',
            ],
          },
          {
            order: 4,
            instruction: 'Collect your new NIC after the processing period',
            instructionSi: 'р╖Гр╖Рр╢Ър╖Гр╖Фр╢╕р╖К р╢Ър╖Пр╢╜р╢║р╖Щр╢▒р╖К р╢┤р╖Гр╖Ф р╢Фр╢╢р╖Ъ р╢▒р╖А р╢вр╖П.р╖Др╖Р.р╢Ър╖П р╢Ср╢Ър╢нр╖Ф р╢Ър╢╗р╢Ьр╢▒р╖Кр╢▒',
            instructionTa:
              'роЪрпЖропро▓ро╛роХрпНроХ роХро╛ро▓родрпНродро┐ро▒рпНроХрпБрокрпН рокро┐ро▒роХрпБ роЙроЩрпНроХро│рпН рокрпБродро┐роп NIC роР роЪрпЗроХро░ро┐роХрпНроХро╡рпБроорпН',
            estimatedTime: '10 minutes',
            tips: [
              'Bring receipt and old ID if available',
              'Verify all details on new NIC',
            ],
          },
        ],
        requirements: [
          {
            name: 'Original Birth Certificate',
            nameSi: 'р╢╕р╖Фр╢╜р╖К р╢Лр╢┤р╖Кр╢┤р╖Рр╢▒р╖Кр╢▒ р╖Гр╖Др╢нр╖Тр╢Ър╢║',
            nameTa: 'роЕроЪро▓рпН рокро┐ро▒рокрпНрокрпБ роЪро╛ройрпНро▒ро┐родро┤рпН',
            description:
              'Certified copy issued by Registrar General or authorized officer',
            isRequired: true,
            order: 1,
          },
          {
            name: 'Proof of Current Address',
            nameSi: 'р╖Ар╢╗р╖Кр╢нр╢╕р╖Пр╢▒ р╢╜р╖Тр╢┤р╖Тр╢▒р╢║р╖Ъ р╖Гр╖Пр╢Ър╖Кр╖Вр╖Тр╢║',
            nameTa: 'родро▒рпНрокрпЛродрпИроп роорпБроХро╡ро░ро┐ роЖродро╛ро░роорпН',
            description:
              'Utility bill, bank statement, or Grama Niladhari certificate within 3 months',
            isRequired: true,
            order: 2,
          },
          {
            name: 'Parent/Guardian NIC Copies',
            nameSi: 'р╢╕р╖Пр╢┤р╖Тр╢║/р╢╖р╖Пр╢╗р╢Ър╢╗р╖Фр╢Ьр╖Ъ р╢вр╖П.р╖Др╖Р.р╢Ър╖П р╢┤р╖Тр╢зр╢┤р╢нр╖К',
            nameTa: 'рокрпЖро▒рпНро▒рпЛро░рпН/рокро╛родрпБроХро╛ро╡ро▓ро░рпН NIC роироХро▓рпНроХро│рпН',
            description: "Photocopies of both parents' NICs (if applicable)",
            isRequired: false,
            order: 3,
          },
          {
            name: 'Passport Size Photographs',
            nameSi: 'р╢Ьр╢╕р╢▒р╖К р╢╢р╢╜р╢┤р╢нр╖КтАНр╢╗ р╢┤р╖КтАНр╢╗р╢╕р╖Пр╢лр╢║р╖Ъ р╢бр╖Пр╢║р╖Пр╢╗р╖Цр╢┤',
            nameTa: 'рокро╛ро╕рпНрокрпЛро░рпНроЯрпН роЕро│ро╡рпБ рокрпБроХрпИрокрпНрокроЯроЩрпНроХро│рпН',
            description: '2 recent passport-size color photographs',
            isRequired: true,
            order: 4,
          },
        ],
        fees: [
          {
            description: 'Application Processing Fee',
            amount: 100,
            currency: 'LKR',
            isOptional: false,
          },
        ],
      },
      {
        title: 'Apply for Sri Lankan Passport',
        titleSi: 'р╖Бр╖КтАНр╢╗р╖У р╢╜р╢Вр╢Ър╢▒р╖К р╢Ьр╢╕р╢▒р╖К р╢╢р╢╜р╢┤р╢нр╖КтАНр╢╗р╢║ р╖Гр╢│р╖Др╖П р╢Ер╢║р╢пр╖Фр╢╕р╖К р╢Ър╖Тр╢╗р╖Ур╢╕',
        titleTa: 'роЗро▓роЩрпНроХрпИ роХроЯро╡рпБроЪрпНроЪрпАроЯрпНроЯро┐ро▒рпНроХрпБ ро╡ро┐рогрпНрогрокрпНрокро┐роХрпНроХро╡рпБроорпН',
        slug: 'apply-sri-lankan-passport',
        category: ProcedureCategory.PASSPORTS,
        status: ProcedureStatus.ACTIVE,
        keywords: [
          'passport',
          'travel document',
          'visa',
          'travel',
          'immigration',
        ],
        searchTags: ['passport', 'travel', 'document', 'visa', 'immigration'],
        estimatedDuration: '3-45 days',
        difficulty: 'MEDIUM',
        steps: [
          {
            order: 1,
            instruction: 'Submit online application via epassport.gov.lk',
            instructionSi:
              'epassport.gov.lk р╖Др╢╗р╖Др╖П р╢╕р╖Пр╢╗р╖Кр╢Ьр╢Ьр╢н р╢Ер╢║р╢пр╖Фр╢╕р╖Кр╢┤р╢н р╢Йр╢пр╖Тр╢╗р╖Тр╢┤р╢нр╖К р╢Ър╖Тр╢╗р╖Ур╢╕',
            instructionTa:
              'epassport.gov.lk роорпВро▓роорпН роЖройрпНро▓рпИройрпН ро╡ро┐рогрпНрогрокрпНрокроорпН роЪрооро░рпНрокрпНрокро┐роХрпНроХро╡рпБроорпН',
            estimatedTime: '20-30 minutes',
            tips: [
              'Have all documents scanned and ready',
              'Use good internet connection',
              'Create account first',
            ],
          },
          {
            order: 2,
            instruction: 'Pay application fee online and print receipt',
            instructionSi:
              'р╢Ер╢║р╢пр╖Фр╢╕р╖К р╢Ьр╖Пр╖Гр╖Кр╢нр╖Фр╖А р╢╕р╖Пр╢╗р╖Кр╢Ьр╢Ьр╢нр╖А р╢Ьр╖Щр╖Ар╖П р╢╗р╖Тр╖Гр╖Тр╢зр╖Кр╢┤р╢н р╢╕р╖Фр╢пр╖КтАНр╢╗р╢лр╢║ р╢Ър╢╗р╢▒р╖Кр╢▒',
            instructionTa:
              'роЖройрпНро▓рпИройро┐ро▓рпН ро╡ро┐рогрпНрогрокрпНрок роХроЯрпНроЯрогроорпН роЪрпЖро▓рпБродрпНродро┐ ро░роЪрпАродрпИ роЕроЪрпНроЪро┐роЯро╡рпБроорпН',
            estimatedTime: '5-10 minutes',
            tips: [
              'Keep payment receipt safe',
              'Use secure payment methods',
              'Check bank charges',
            ],
          },
          {
            order: 3,
            instruction: 'Visit passport office for biometric data collection',
            instructionSi:
              'р╢вр╖Ур╖Ар╢╕р╖Тр╢нр╖Тр╢Ъ р╢пр╢нр╖Кр╢н р╢Ср╢Ър╢нр╖Ф р╢Ър╖Тр╢╗р╖Ур╢╕ р╖Гр╢│р╖Др╖П р╢Ьр╢╕р╢▒р╖К р╢╢р╢╜р╢┤р╢нр╖КтАНр╢╗ р╢Ър╖Пр╢╗р╖Кр╢║р╖Пр╢╜р╢║р╢з р╢┤р╖Тр╖Ар╖Тр╖Гр╖Щр╢▒р╖Кр╢▒',
            instructionTa:
              'роЙропро┐ро░ро┐ропро▓рпН родро░ро╡рпБ роЪрпЗроХро░ро┐рокрпНрокро┐ро▒рпНроХро╛роХ роХроЯро╡рпБроЪрпНроЪрпАроЯрпНроЯрпБ роЕро▓рпБро╡ро▓роХродрпНродро┐ро▒рпНроХрпБ роЪрпЖро▓рпНро▓ро╡рпБроор╖К',
            estimatedTime: '45-60 minutes',
            requiredDocs: [
              'All original documents',
              'Online application print',
              'Payment receipt',
            ],
            tips: [
              'Book appointment online',
              'Arrive 15 minutes early',
              'Dress formally',
            ],
          },
          {
            order: 4,
            instruction: 'Collect passport after processing completion',
            instructionSi:
              'р╖Гр╖Рр╢Ър╖Гр╖Фр╢╕р╖К р╖Гр╢╕р╖Кр╢┤р╖Цр╢╗р╖Кр╢л р╢Ър╖Тр╢╗р╖Ур╢╕р╖Щр╢▒р╖К р╢┤р╖Гр╖Ф р╢Ьр╢╕р╢▒р╖К р╢╢р╢╜р╢┤р╢нр╖КтАНр╢╗р╢║ р╢Ср╢Ър╢нр╖Ф р╢Ър╢╗р╢Ьр╢▒р╖Кр╢▒',
            instructionTa: 'роЪрпЖропро▓ро╛роХрпНроХроорпН роорпБроЯро┐роирпНродродрпБроорпН роХроЯро╡рпБроЪрпНроЪрпАроЯрпНроЯрпИ роЪрпЗроХро░ро┐роХрпНроХро╡рпБроорпН',
            estimatedTime: '10-15 minutes',
            tips: [
              'Check SMS updates',
              'Verify all details',
              'Sign passport immediately',
            ],
          },
        ],
        requirements: [
          {
            name: 'National Identity Card',
            nameSi: 'р╢вр╖Пр╢нр╖Тр╢Ъ р╖Др╖Рр╢│р╖Фр╢▒р╖Фр╢╕р╖Кр╢┤р╢н',
            nameTa: 'родрпЗроЪро┐роп роЕроЯрпИропро╛ро│ роЕроЯрпНроЯрпИ',
            description:
              'Valid Sri Lankan NIC (original and certified photocopy)',
            isRequired: true,
            order: 1,
          },
          {
            name: 'Birth Certificate',
            nameSi: 'р╢Лр╢┤р╖Кр╢┤р╖Рр╢▒р╖Кр╢▒ р╖Гр╖Др╢нр╖Тр╢Ър╢║',
            nameTa: 'рокро┐ро▒рокрпНрокрпБ роЪро╛ройрпНро▒ро┐родро┤рпН',
            description:
              'Original birth certificate issued by Registrar General',
            isRequired: true,
            order: 2,
          },
          {
            name: 'Marriage Certificate',
            nameSi: 'р╖Ар╖Тр╖Ар╖Пр╖Д р╖Гр╖Др╢нр╖Тр╢Ър╢║',
            nameTa: 'родро┐ро░рпБроорог роЪро╛ройрпНро▒ро┐родро┤рпН',
            description: 'Required if married and name change is applicable',
            isRequired: false,
            order: 3,
          },
          {
            name: 'Previous Passport',
            nameSi: 'р╢┤р╖Щр╢╗ р╢Ьр╢╕р╢▒р╖К р╢╢р╢╜р╢┤р╢нр╖КтАНр╢╗р╢║',
            nameTa: 'роорпБроирпНродрпИроп роХроЯро╡рпБроЪрпНроЪрпАроЯрпНроЯрпБ',
            description: 'If renewing existing passport',
            isRequired: false,
            order: 4,
          },
        ],
        fees: [
          {
            description: 'Normal Processing (45 days)',
            amount: 3500,
            currency: 'LKR',
            isOptional: false,
          },
          {
            description: 'Fast Track (7 days)',
            amount: 7000,
            currency: 'LKR',
            isOptional: true,
          },
          {
            description: 'Express Service (3 days)',
            amount: 10000,
            currency: 'LKR',
            isOptional: true,
          },
        ],
      },
      {
        title: 'Business Registration Certificate',
        titleSi: 'р╖Ар╖КтАНр╢║р╖Пр╢┤р╖Пр╢╗ р╢╜р╖Тр╢║р╖Пр╢┤р╢пр╖Тр╢Вр╢ар╖Т р╖Гр╖Др╢нр╖Тр╢Ър╢║',
        titleTa: 'ро╡рогро┐роХ рокродро┐ро╡рпБ роЪро╛ройрпНро▒ро┐родро┤рпН',
        slug: 'business-registration-certificate',
        category: ProcedureCategory.BUSINESS,
        status: ProcedureStatus.ACTIVE,
        keywords: [
          'business registration',
          'company',
          'enterprise',
          'license',
          'trade',
        ],
        searchTags: ['business', 'registration', 'company', 'license', 'trade'],
        estimatedDuration: '3-7 days',
        difficulty: 'MEDIUM',
        steps: [
          {
            order: 1,
            instruction: 'Reserve business name through ROC online system',
            instructionSi:
              'ROC р╢╕р╖Пр╢╗р╖Кр╢Ьр╢Ьр╢н р╢┤р╢пр╖Кр╢░р╢нр╖Тр╢║ р╖Др╢╗р╖Др╖П р╖Ар╖КтАНр╢║р╖Пр╢┤р╖Пр╢╗р╖Тр╢Ъ р╢▒р╖Пр╢╕р╢║ р╢╗р╢Ър╖Кр╖Вр╖Тр╢н р╢Ър╢╗р╢▒р╖Кр╢▒',
            instructionTa:
              'ROC роЖройрпНро▓рпИройрпН роЕроорпИрокрпНрокрпБ роорпВро▓роорпН ро╡рогро┐роХ рокрпЖропро░рпИ роорпБройрпНрокродро┐ро╡рпБ роЪрпЖропрпНропро╡рпБроорпН',
            estimatedTime: '15-30 minutes',
            tips: [
              'Check name availability first',
              'Have 3 alternative names ready',
            ],
          },
          {
            order: 2,
            instruction: 'Prepare and submit required documents',
            instructionSi: 'р╢Ер╖Ар╖Бр╖КтАНр╢║ р╢╜р╖Тр╢║р╢Ър╖Тр╢║р╖Ар╖Тр╢╜р╖Т р╖Гр╢Ър╖Гр╖П р╢Йр╢пр╖Тр╢╗р╖Тр╢┤р╢нр╖К р╢Ър╢╗р╢▒р╖Кр╢▒',
            instructionTa: 'родрпЗро╡рпИропро╛рой роЖро╡рогроЩрпНроХро│рпИ родропро╛ро░ро┐родрпНродрпБ роЪрооро░рпНрокрпНрокро┐роХрпНроХро╡рпБроорпН',
            estimatedTime: '60-90 minutes',
            requiredDocs: ['Application form', 'NIC copies', 'Address proof'],
          },
        ],
        requirements: [
          {
            name: 'Completed Application Form',
            nameSi: 'р╖Гр╢╕р╖Кр╢┤р╖Фр╢╗р╖Кр╢л р╢Ер╢║р╢пр╖Фр╢╕р╖Кр╢┤р╢н',
            nameTa: 'роиро┐ро░рокрпНрокрокрпНрокроЯрпНроЯ ро╡ро┐рогрпНрогрокрпНрок рокроЯро┐ро╡роорпН',
            description: 'Form ROC 1 duly filled and signed',
            isRequired: true,
            order: 1,
          },
          {
            name: 'National Identity Card',
            nameSi: 'р╢вр╖Пр╢нр╖Тр╢Ъ р╖Др╖Рр╢│р╖Фр╢▒р╖Фр╢╕р╖Кр╢┤р╢н',
            nameTa: 'родрпЗроЪро┐роп роЕроЯрпИропро╛ро│ роЕроЯрпНроЯрпИ',
            description: 'NIC of proprietor/partners (certified copies)',
            isRequired: true,
            order: 2,
          },
        ],
        fees: [
          {
            description: 'Registration Fee',
            amount: 2500,
            currency: 'LKR',
            isOptional: false,
          },
          {
            description: 'Name Reservation Fee',
            amount: 500,
            currency: 'LKR',
            isOptional: false,
          },
        ],
      },
    ];

    // Create procedures with all related data
    for (const procedureData of procedures) {
      const { steps, requirements, fees, ...procedure } = procedureData;

      const createdProcedure = await prisma.procedure.create({
        data: procedure,
      });

      // Create steps
      await Promise.all(
        steps.map((step) =>
          prisma.procedureStep.create({
            data: {
              ...step,
              procedureId: createdProcedure.id,
            },
          })
        )
      );

      // Create requirements
      await Promise.all(
        requirements.map((req) =>
          prisma.requirement.create({
            data: {
              ...req,
              procedureId: createdProcedure.id,
            },
          })
        )
      );

      // Create fees
      await Promise.all(
        fees.map((fee) =>
          prisma.fee.create({
            data: {
              ...fee,
              procedureId: createdProcedure.id,
            },
          })
        )
      );

      // Link with appropriate offices
      const officeIndex =
        procedure.category === ProcedureCategory.PASSPORTS
          ? 1
          : procedure.category === ProcedureCategory.BUSINESS
            ? 2
            : 0;

      await prisma.procedureOffice.create({
        data: {
          procedureId: createdProcedure.id,
          officeId: offices[officeIndex].id,
          isMain: true,
        },
      });

      console.log(`ЁЯУД Procedure created: ${procedure.title}`);
    }

    // Create system configuration
    await prisma.systemConfig.upsert({
      where: { key: 'ai_config' },
      update: {},
      create: {
        key: 'ai_config',
        value: {
          maxTokens: 200,
          temperature: 0.7,
          confidenceThreshold: 0.6,
          supportedLanguages: ['en', 'si', 'ta'],
          fallbackResponses: {
            en: "I'm sorry, I don't have enough information about that procedure. Please contact the relevant government office for assistance.",
            si: 'р╖Гр╢╕р╖Пр╖Ар╖Щр╢▒р╖Кр╢▒, р╢╕р╢з р╢Ср╢╕ р╢Ър╖КтАНр╢╗р╖Тр╢║р╖Пр╢╕р╖Пр╢╗р╖Кр╢Ьр╢║ р╢┤р╖Тр╖Ер╖Тр╢╢р╢│ р╢┤р╖КтАНр╢╗р╢╕р╖Пр╢лр╖Ар╢нр╖К р╢нр╖Ьр╢╗р╢нр╖Фр╢╗р╖Ф р╢▒р╖Рр╢н. р╢Ър╢╗р╖Фр╢лр╖Пр╢Ър╢╗ р╖Гр╖Др╖Пр╢║ р╖Гр╢│р╖Др╖П р╢Ер╢пр╖Пр╖Е р╢╗р╢вр╢║р╖Ъ р╢Ър╖Пр╢╗р╖Кр╢║р╖Пр╢╜р╢║р╢з р╖Гр╢╕р╖Кр╢╢р╢▒р╖Кр╢░ р╖Ар╢▒р╖Кр╢▒.',
            ta: 'рооройрпНройро┐роХрпНроХро╡рпБроорпН, роЕроирпНрод роироЯрпИроорпБро▒рпИ рокро▒рпНро▒ро┐роп рокрпЛродрпБрооро╛рой родроХро╡ро▓рпН роОройрпНройро┐роЯроорпН роЗро▓рпНро▓рпИ. роЙродро╡ро┐роХрпНроХро╛роХ родрпКроЯро░рпНрокрпБроЯрпИроп роЕро░роЪрпБ роЕро▓рпБро╡ро▓роХродрпНродрпИ родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│ро╡рпБроорпН.',
          },
        },
      },
    });

    // Create FAQ entries
    const faqs = [
      {
        question: 'How long does it take to get a new NIC?',
        questionSi: 'р╢▒р╖А р╢вр╖П.р╖Др╖Р.р╢Ър╖П р╢╜р╢╢р╖П р╢Ьр╖Рр╢▒р╖Ур╢╕р╢з р╢Ър╖Ьр╢┤р╢╕р╢л р╢Ър╖Пр╢╜р╢║р╢Ър╖К р╢Ьр╢н р╖Ар╖Ър╢п?',
        questionTa: 'рокрпБродро┐роп NIC рокрпЖро▒ роОро╡рпНро╡ро│ро╡рпБ роирпЗро░роорпН роЖроХрпБроорпН?',
        answer:
          'Typically 7-14 working days from the date of application submission.',
        answerSi:
          'р╖Гр╖Пр╢╕р╖Пр╢▒р╖КтАНр╢║р╢║р╖Щр╢▒р╖К р╢Ер╢║р╢пр╖Фр╢╕р╖Кр╢┤р╢н р╢Йр╢пр╖Тр╢╗р╖Тр╢┤р╢нр╖К р╢Ър╖Е р╢пр╖Тр╢▒р╢║р╖Ъ р╖Гр╖Тр╢з р╖Ар╖Рр╢й р╢Ър╢╗р╢▒ р╢пр╖Тр╢▒ 7-14р╢Ър╖Т.',
        answerTa:
          'рокрпКродрпБро╡ро╛роХ ро╡ро┐рогрпНрогрокрпНрокроорпН роЪрооро░рпНрокрпНрокро┐родрпНрод роиро╛ро│ро┐ро▓ро┐ро░рпБроирпНродрпБ 7-14 ро╡рпЗро▓рпИ роиро╛роЯрпНроХро│рпН.',
        category: 'IDENTITY_DOCUMENTS',
        isActive: true,
      },
      {
        question: 'What is the cost of a Sri Lankan passport?',
        questionSi: 'р╖Бр╖КтАНр╢╗р╖У р╢╜р╢Вр╢Ър╢▒р╖К р╢Ьр╢╕р╢▒р╖К р╢╢р╢╜р╢┤р╢нр╖КтАНр╢╗р╢║р╢Ъ р╢┤р╖Тр╢╗р╖Тр╖Ар╖Рр╢║ р╢Ър╖Ур╢║р╢п?',
        questionTa: 'роЗро▓роЩрпНроХрпИ роХроЯро╡рпБроЪрпНроЪрпАроЯрпНроЯро┐ройрпН ро╡ро┐ро▓рпИ роОройрпНрой?',
        answer:
          'Normal processing (45 days): Rs. 3,500. Fast track (7 days): Rs. 7,000. Express (3 days): Rs. 10,000.',
        answerSi:
          'р╖Гр╖Пр╢╕р╖Пр╢▒р╖КтАНр╢║ р╖Гр╖Рр╢Ър╖Гр╖Фр╢╕р╖К (р╢пр╖Тр╢▒ 45): р╢╗р╖Ф. 3,500. р╖Ар╖Ър╢Ьр╖Ар╢нр╖К (р╢пр╖Тр╢▒ 7): р╢╗р╖Ф. 7,000. р╢┤р╖КтАНр╢╗р╢Ър╖Пр╖Бр╖Тр╢н (р╢пр╖Тр╢▒ 3): р╢╗р╖Ф. 10,000.',
        answerTa:
          'роЪро╛родро╛ро░рог роЪрпЖропро▓ро╛роХрпНроХроорпН (45 роиро╛роЯрпНроХро│рпН): ро░рпВ. 3,500. ро╡рпЗроХрооро╛рой (7 роиро╛роЯрпНроХро│рпН): ро░рпВ. 7,000. ро╡ро┐ро░рпИро╡рпБ (3 роиро╛роЯрпНроХро│рпН): ро░рпВ. 10,000.',
        category: 'PASSPORTS',
        isActive: true,
      },
    ];

    for (const faq of faqs) {
      await prisma.fAQ.create({ data: faq });
    }

    console.log('тЭУ FAQ entries created');
    console.log('тЪЩя╕П System configuration created');
    console.log('ЁЯОЙ Database seeded successfully!');
  } catch (error) {
    console.error('тЭМ Seed failed:', error);
    throw error;
  }
}

main()
  .catch((e) => {
    console.error('тЭМ Seed failed:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
